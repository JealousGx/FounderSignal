services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    platform: linux/x86_64
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./api/.env # change this to your .env file
    environment:
      DATABASE_URL: postgres://admin:admin@postgres:5432/postgres?sslmode=disable

      DBUser: admin
      DBPass: admin
      DBSSL: disable
      DBName: postgres
      DBHost: postgres
      DBPort: 5432
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    platform: linux/x86_64
    ports:
      - "3000:3000"
    environment:
      NEXT_TELEMETRY_DISABLED: 1
      NODE_ENV: development # change this to production if needed. i wanted to test it in development mode and avoid publishing clerk project.
    env_file:
      - ./web/.env.local # change this to your .env.local file
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:latest
    platform: linux/x86_64
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
